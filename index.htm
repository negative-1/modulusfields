<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	text-align:justify;
	line-height:115%;
	font-size:10.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-align:right;
	border:none;
	padding:0in;
	font-size:26.0pt;
	font-family:"Calibri",sans-serif;
	font-variant:small-caps;
	color:#262626;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtitle Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:.5in;
	margin-left:0in;
	text-align:right;
	font-size:10.0pt;
	font-family:"Calibri Light",sans-serif;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Times New Roman",serif;
	font-variant:small-caps;
	color:#262626;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Calibri Light",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<div style='border:none;border-top:solid #70AD47 1.0pt;padding:1.0pt 0in 0in 0in'>

<p class=MsoTitle><span style='font-variant:normal !important;text-transform:
uppercase'>Modulus Fields</span></p>

</div>

<p class=MsoSubtitle>e2PIi@subtract.one</p>

<p class=MsoNormal><span
style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif'><img
width=348 height=105 src="modulusfields_files/image001.png"></span></p>

<p class=MsoNormal><span
style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif'><img
width=341 height=102 src="modulusfields_files/image002.png"></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;line-height:115%'>The&nbsp;</span><span
style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif;
position:relative;top:5.5pt'><img width=10 height=25 src="modulusfields_files/image003.png"></span><span style='font-size:14.0pt;
line-height:115%'> function simply returns an integer </span><span style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif;position:relative;
top:5.5pt'><img width=64 height=25 src="modulusfields_files/image004.png"></span><span
style='font-size:14.0pt;line-height:115%'> such that the length of the integer
is </span><span
style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif;
position:relative;top:5.5pt'><img width=44 height=25
src="modulusfields_files/image005.png"></span><span style='font-size:14.0pt;
line-height:115%'>. This is then used by the&nbsp;</span><span style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif;
position:relative;top:5.5pt'><img width=21 height=25 src="modulusfields_files/image006.png"></span><span style='font-size:14.0pt;
line-height:115%'> function which constructs a repeating decimal over a
distinct set of integers that actually counts the factorization over the set.
For example:</span></p>

<p class=MsoNormal><span
style='font-size:10.0pt;line-height:115%;font-family:"Calibri",sans-serif'><img
width=573 height=33 src="modulusfields_files/image007.png"></span></p>

<p class=MsoNormal>I believe there is an opportunity here to improve
factorization algorithms as the generation of this modulus field is certainly
in P, once the primes in the moduli set are decided upon based upon
implementation requirements. In RSAâ€™s case we know the order of the primes that
can be used as the key pairs since they want to create an xbit public key and
the spec calls for minimum ybit private which places a well defined bound on
the range. Assuming you could store/calculate the primes required to generate
factoring an RSA Key would then certainly be P.</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
